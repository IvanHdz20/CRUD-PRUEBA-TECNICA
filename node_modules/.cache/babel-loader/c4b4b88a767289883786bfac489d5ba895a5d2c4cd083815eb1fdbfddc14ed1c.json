{"ast":null,"code":"// src/stores/productosStore.js\nimport { defineStore } from \"pinia\";\nimport { getProductos, crearProducto, actualizarProducto, eliminarProducto } from \"../services/productos\";\nexport const useProductoStore = defineStore(\"producto\", {\n  state: () => ({\n    productos: []\n  }),\n  actions: {\n    async obtenerProductos() {\n      try {\n        this.productos = await getProductos();\n      } catch (error) {\n        console.error(\"Error obteniendo productos:\", error);\n      }\n    },\n    async agregarProducto(nuevo) {\n      try {\n        await crearProducto(nuevo);\n        await this.obtenerProductos();\n      } catch (error) {\n        console.error(\"Error creando producto:\", error);\n      }\n    },\n    async editarProducto(id, datos) {\n      try {\n        await actualizarProducto(id, datos);\n        await this.obtenerProductos();\n      } catch (error) {\n        console.error(\"Error editando producto:\", error);\n      }\n    },\n    async eliminarProducto(id) {\n      try {\n        await eliminarProducto(id);\n        await this.obtenerProductos();\n      } catch (error) {\n        console.error(\"Error eliminando producto:\", error);\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","getProductos","crearProducto","actualizarProducto","eliminarProducto","useProductoStore","state","productos","actions","obtenerProductos","error","console","agregarProducto","nuevo","editarProducto","id","datos"],"sources":["C:/Users/Elpap/OneDrive/Desktop/CRUD/productos-vue/src/stores/productosStore.js"],"sourcesContent":["// src/stores/productosStore.js\r\nimport { defineStore } from \"pinia\";\r\nimport { getProductos, crearProducto, actualizarProducto, eliminarProducto } from \"../services/productos\";\r\n\r\nexport const useProductoStore = defineStore(\"producto\", {\r\n  state: () => ({\r\n    productos: [],\r\n  }),\r\n\r\n  actions: {\r\n    async obtenerProductos() {\r\n      try {\r\n        this.productos = await getProductos();\r\n      } catch (error) {\r\n        console.error(\"Error obteniendo productos:\", error);\r\n      }\r\n    },\r\n\r\n    async agregarProducto(nuevo) {\r\n      try {\r\n        await crearProducto(nuevo);\r\n        await this.obtenerProductos();\r\n      } catch (error) {\r\n        console.error(\"Error creando producto:\", error);\r\n      }\r\n    },\r\n\r\n    async editarProducto(id, datos) {\r\n      try {\r\n        await actualizarProducto(id, datos);\r\n        await this.obtenerProductos();\r\n      } catch (error) {\r\n        console.error(\"Error editando producto:\", error);\r\n      }\r\n    },\r\n\r\n    async eliminarProducto(id) {\r\n      try {\r\n        await eliminarProducto(id);\r\n        await this.obtenerProductos();\r\n      } catch (error) {\r\n        console.error(\"Error eliminando producto:\", error);\r\n      }\r\n    },\r\n  },\r\n});\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,YAAY,EAAEC,aAAa,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,uBAAuB;AAEzG,OAAO,MAAMC,gBAAgB,GAAGL,WAAW,CAAC,UAAU,EAAE;EACtDM,KAAK,EAAEA,CAAA,MAAO;IACZC,SAAS,EAAE;EACb,CAAC,CAAC;EAEFC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,IAAI,CAACF,SAAS,GAAG,MAAMN,YAAY,CAAC,CAAC;MACvC,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAED,MAAME,eAAeA,CAACC,KAAK,EAAE;MAC3B,IAAI;QACF,MAAMX,aAAa,CAACW,KAAK,CAAC;QAC1B,MAAM,IAAI,CAACJ,gBAAgB,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAED,MAAMI,cAAcA,CAACC,EAAE,EAAEC,KAAK,EAAE;MAC9B,IAAI;QACF,MAAMb,kBAAkB,CAACY,EAAE,EAAEC,KAAK,CAAC;QACnC,MAAM,IAAI,CAACP,gBAAgB,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAMN,gBAAgBA,CAACW,EAAE,EAAE;MACzB,IAAI;QACF,MAAMX,gBAAgB,CAACW,EAAE,CAAC;QAC1B,MAAM,IAAI,CAACN,gBAAgB,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}